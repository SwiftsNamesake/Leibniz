
==================== FINAL INTERFACE ====================
2016-10-31 14:38:29.3759302 UTC

interface Leibn_4HbkS7GG3563vKXzubBV4Y:Leibniz.Trigonometry 7103
  interface hash: eaf090cc3c8934ed50311630232f1f95
  ABI hash: 87ed8bb6c5b9d0c13d64b1aaef10019e
  export-list hash: eb3fa3a0b27e7b39f16eac8d763025e6
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cdfd9fa95664fafeb5ac9bc47054f6bd
  sig of: Nothing
  used TH splices: False
  where
exports:
  Leibniz.Trigonometry.deg
  Leibniz.Trigonometry.rad
module dependencies: Leibniz.Constants
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  Leibniz.Constants c3eda7d6d261b91c634329c3ce56de12
  exports: 98098f3bea7ef6de66776abca2bb3ca3
  Ï€ 3350d24a572facf86425a151b1827778
import  -/  base-4.8.2.0:GHC.Float e532d434ec2447d809887c0fca1d78a5
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
8527b97e8d19a9f6f4c1fd5ee3140f54
  deg :: GHC.Float.Floating f => f -> f
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLL),U(1*U,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U>,
     Unfolding: (\ @ f $dFloating :: GHC.Float.Floating f eta :: f ->
                 let {
                   $dFractional :: GHC.Real.Fractional f
                   = GHC.Float.$p1Floating @ f $dFloating
                 } in
                 let {
                   $dNum :: GHC.Num.Num f = GHC.Real.$p1Fractional @ f $dFractional
                 } in
                 GHC.Num.*
                   @ f
                   $dNum
                   eta
                   (GHC.Num.*
                      @ f
                      $dNum
                      (GHC.Num.fromInteger @ f $dNum Leibniz.Trigonometry.deg1)
                      (GHC.Real.recip
                         @ f
                         $dFractional
                         (GHC.Float.pi @ f $dFloating)))) -}
8d93cbd59acff585265771e41eefa9e6
  deg1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 180) -}
56c1908cec322ec2c1dce1aaa8eaa287
  rad :: GHC.Float.Floating f => f -> f
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLLL),U(1*U,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U>,
     Unfolding: (\ @ f $dFloating :: GHC.Float.Floating f eta :: f ->
                 let {
                   $dFractional :: GHC.Real.Fractional f
                   = GHC.Float.$p1Floating @ f $dFloating
                 } in
                 let {
                   $dNum :: GHC.Num.Num f = GHC.Real.$p1Fractional @ f $dFractional
                 } in
                 GHC.Num.*
                   @ f
                   $dNum
                   eta
                   (GHC.Num.*
                      @ f
                      $dNum
                      (GHC.Float.pi @ f $dFloating)
                      (GHC.Real.recip
                         @ f
                         $dFractional
                         (GHC.Num.fromInteger @ f $dNum Leibniz.Trigonometry.deg1)))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

